// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/AddUserToChannelModal should match snapshot 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogClassName="modal--overflow"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onExited={[MockFunction]}
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      <FormattedMessage
        defaultMessage="Add {name} to a channel"
        id="add_user_to_channel_modal.title"
        values={
          Object {
            "name": "@undefined",
          }
        }
      />
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
  >
    <div
      className="modal__hint"
    >
      <FormattedMessage
        defaultMessage="Type to find a channel. Use ↑↓ to browse, ↵ to select, ESC to dismiss."
        id="add_user_to_channel_modal.help"
        values={Object {}}
      />
    </div>
    <SuggestionBox
      className="form-control focused"
      completeOnTab={false}
      containerClass=""
      delayInputUpdate={true}
      isRHS={false}
      listComponent={[Function]}
      listStyle="bottom"
      maxLength="64"
      onChange={[Function]}
      onItemSelected={[Function]}
      openOnFocus={false}
      openWhenEmpty={true}
      providers={
        Array [
          SearchChannelWithPermissionsProvider {
            "appDispatch": [Function],
            "disableDispatches": false,
            "dispatch": [Function],
            "getState": [Function],
            "latestComplete": true,
            "latestPrefix": "",
            "requestStarted": false,
          },
        ]
      }
      renderDividers={false}
      renderNoResults={false}
      replaceAllInputOnSelect={false}
      requiredCharacters={1}
      value=""
    />
    <div>
      <br />
    </div>
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <button
      className="btn btn-link"
      onClick={[Function]}
      type="button"
    >
      <FormattedMessage
        defaultMessage="Cancel"
        id="add_user_to_channel_modal.cancel"
        values={Object {}}
      />
    </button>
    <button
      className="btn btn-primary"
      disabled={true}
      onClick={[Function]}
      type="button"
    >
      <FormattedMessage
        defaultMessage="Add"
        id="add_user_to_channel_modal.add"
        values={Object {}}
      />
    </button>
  </ModalFooter>
</Modal>
`;

exports[`components/AddUserToChannelModal should match snapshot if user is a member of the selected channel 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogClassName="modal--overflow"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onExited={[MockFunction]}
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      <FormattedMessage
        defaultMessage="Add {name} to a channel"
        id="add_user_to_channel_modal.title"
        values={
          Object {
            "name": "@undefined",
          }
        }
      />
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
  >
    <div
      className="modal__hint"
    >
      <FormattedMessage
        defaultMessage="Type to find a channel. Use ↑↓ to browse, ↵ to select, ESC to dismiss."
        id="add_user_to_channel_modal.help"
        values={Object {}}
      />
    </div>
    <SuggestionBox
      className="form-control focused"
      completeOnTab={false}
      containerClass=""
      delayInputUpdate={true}
      isRHS={false}
      listComponent={[Function]}
      listStyle="bottom"
      maxLength="64"
      onChange={[Function]}
      onItemSelected={[Function]}
      openOnFocus={false}
      openWhenEmpty={true}
      providers={
        Array [
          SearchChannelWithPermissionsProvider {
            "appDispatch": [Function],
            "disableDispatches": false,
            "dispatch": [Function],
            "getState": [Function],
            "latestComplete": true,
            "latestPrefix": "",
            "requestStarted": false,
          },
        ]
      }
      renderDividers={false}
      renderNoResults={false}
      replaceAllInputOnSelect={false}
      requiredCharacters={1}
      value=""
    />
    <div>
      <label
        className="modal__error has-error control-label"
      >
        <FormattedMessage
          defaultMessage="{name} is already a member of that channel"
          id="add_user_to_channel_modal.membershipExistsError"
          values={
            Object {
              "name": "@undefined",
            }
          }
        />
      </label>
      <br />
    </div>
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <button
      className="btn btn-link"
      onClick={[Function]}
      type="button"
    >
      <FormattedMessage
        defaultMessage="Cancel"
        id="add_user_to_channel_modal.cancel"
        values={Object {}}
      />
    </button>
    <button
      className="btn btn-primary"
      disabled={true}
      onClick={[Function]}
      type="button"
    >
      <FormattedMessage
        defaultMessage="Add"
        id="add_user_to_channel_modal.add"
        values={Object {}}
      />
    </button>
  </ModalFooter>
</Modal>
`;

exports[`components/AddUserToChannelModal should match snapshot when a channel is selected 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogClassName="modal--overflow"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onExited={[MockFunction]}
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      <FormattedMessage
        defaultMessage="Add {name} to a channel"
        id="add_user_to_channel_modal.title"
        values={
          Object {
            "name": "@undefined",
          }
        }
      />
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
  >
    <div
      className="modal__hint"
    >
      <FormattedMessage
        defaultMessage="Type to find a channel. Use ↑↓ to browse, ↵ to select, ESC to dismiss."
        id="add_user_to_channel_modal.help"
        values={Object {}}
      />
    </div>
    <SuggestionBox
      className="form-control focused"
      completeOnTab={false}
      containerClass=""
      delayInputUpdate={true}
      isRHS={false}
      listComponent={[Function]}
      listStyle="bottom"
      maxLength="64"
      onChange={[Function]}
      onItemSelected={[Function]}
      openOnFocus={false}
      openWhenEmpty={true}
      providers={
        Array [
          SearchChannelWithPermissionsProvider {
            "appDispatch": [Function],
            "disableDispatches": false,
            "dispatch": [Function],
            "getState": [Function],
            "latestComplete": true,
            "latestPrefix": "",
            "requestStarted": false,
          },
        ]
      }
      renderDividers={false}
      renderNoResults={false}
      replaceAllInputOnSelect={false}
      requiredCharacters={1}
      value=""
    />
    <div>
      <label
        className="modal__error has-error control-label"
      >
        some error
      </label>
      <br />
    </div>
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <button
      className="btn btn-link"
      onClick={[Function]}
      type="button"
    >
      <FormattedMessage
        defaultMessage="Cancel"
        id="add_user_to_channel_modal.cancel"
        values={Object {}}
      />
    </button>
    <button
      className="btn btn-primary"
      disabled={true}
      onClick={[Function]}
      type="button"
    >
      <FormattedMessage
        defaultMessage="Add"
        id="add_user_to_channel_modal.add"
        values={Object {}}
      />
    </button>
  </ModalFooter>
</Modal>
`;

exports[`components/AddUserToChannelModal should match snapshot when a channel is selected 2`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogClassName="modal--overflow"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onExited={[MockFunction]}
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      <FormattedMessage
        defaultMessage="Add {name} to a channel"
        id="add_user_to_channel_modal.title"
        values={
          Object {
            "name": "@undefined",
          }
        }
      />
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
  >
    <div
      className="modal__hint"
    >
      <FormattedMessage
        defaultMessage="Type to find a channel. Use ↑↓ to browse, ↵ to select, ESC to dismiss."
        id="add_user_to_channel_modal.help"
        values={Object {}}
      />
    </div>
    <SuggestionBox
      className="form-control focused"
      completeOnTab={false}
      containerClass=""
      delayInputUpdate={true}
      isRHS={false}
      listComponent={[Function]}
      listStyle="bottom"
      maxLength="64"
      onChange={[Function]}
      onItemSelected={[Function]}
      openOnFocus={false}
      openWhenEmpty={true}
      providers={
        Array [
          SearchChannelWithPermissionsProvider {
            "appDispatch": [Function],
            "disableDispatches": false,
            "dispatch": [Function],
            "getState": [Function],
            "latestComplete": true,
            "latestPrefix": "",
            "requestStarted": false,
          },
        ]
      }
      renderDividers={false}
      renderNoResults={false}
      replaceAllInputOnSelect={false}
      requiredCharacters={1}
      value=""
    />
    <div>
      <label
        className="modal__error has-error control-label"
      >
        some error
      </label>
      <br />
    </div>
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <button
      className="btn btn-link"
      onClick={[Function]}
      type="button"
    >
      <FormattedMessage
        defaultMessage="Cancel"
        id="add_user_to_channel_modal.cancel"
        values={Object {}}
      />
    </button>
    <button
      className="btn btn-primary"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      <FormattedMessage
        defaultMessage="Add"
        id="add_user_to_channel_modal.add"
        values={Object {}}
      />
    </button>
  </ModalFooter>
</Modal>
`;

exports[`components/AddUserToChannelModal should match snapshot when an error message is captured 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogClassName="modal--overflow"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onExited={[MockFunction]}
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      <FormattedMessage
        defaultMessage="Add {name} to a channel"
        id="add_user_to_channel_modal.title"
        values={
          Object {
            "name": "@undefined",
          }
        }
      />
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
  >
    <div
      className="modal__hint"
    >
      <FormattedMessage
        defaultMessage="Type to find a channel. Use ↑↓ to browse, ↵ to select, ESC to dismiss."
        id="add_user_to_channel_modal.help"
        values={Object {}}
      />
    </div>
    <SuggestionBox
      className="form-control focused"
      completeOnTab={false}
      containerClass=""
      delayInputUpdate={true}
      isRHS={false}
      listComponent={[Function]}
      listStyle="bottom"
      maxLength="64"
      onChange={[Function]}
      onItemSelected={[Function]}
      openOnFocus={false}
      openWhenEmpty={true}
      providers={
        Array [
          SearchChannelWithPermissionsProvider {
            "appDispatch": [Function],
            "disableDispatches": false,
            "dispatch": [Function],
            "getState": [Function],
            "latestComplete": true,
            "latestPrefix": "",
            "requestStarted": false,
          },
        ]
      }
      renderDividers={false}
      renderNoResults={false}
      replaceAllInputOnSelect={false}
      requiredCharacters={1}
      value=""
    />
    <div>
      <label
        className="modal__error has-error control-label"
      >
        some error
      </label>
      <br />
    </div>
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <button
      className="btn btn-link"
      onClick={[Function]}
      type="button"
    >
      <FormattedMessage
        defaultMessage="Cancel"
        id="add_user_to_channel_modal.cancel"
        values={Object {}}
      />
    </button>
    <button
      className="btn btn-primary"
      disabled={true}
      onClick={[Function]}
      type="button"
    >
      <FormattedMessage
        defaultMessage="Add"
        id="add_user_to_channel_modal.add"
        values={Object {}}
      />
    </button>
  </ModalFooter>
</Modal>
`;

exports[`components/AddUserToChannelModal should match snapshot when membership is being checked 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogClassName="modal--overflow"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onExited={[MockFunction]}
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      <FormattedMessage
        defaultMessage="Add {name} to a channel"
        id="add_user_to_channel_modal.title"
        values={
          Object {
            "name": "@undefined",
          }
        }
      />
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
  >
    <div
      className="modal__hint"
    >
      <FormattedMessage
        defaultMessage="Type to find a channel. Use ↑↓ to browse, ↵ to select, ESC to dismiss."
        id="add_user_to_channel_modal.help"
        values={Object {}}
      />
    </div>
    <SuggestionBox
      className="form-control focused"
      completeOnTab={false}
      containerClass=""
      delayInputUpdate={true}
      isRHS={false}
      listComponent={[Function]}
      listStyle="bottom"
      maxLength="64"
      onChange={[Function]}
      onItemSelected={[Function]}
      openOnFocus={false}
      openWhenEmpty={true}
      providers={
        Array [
          SearchChannelWithPermissionsProvider {
            "appDispatch": [Function],
            "disableDispatches": false,
            "dispatch": [Function],
            "getState": [Function],
            "latestComplete": true,
            "latestPrefix": "",
            "requestStarted": false,
          },
        ]
      }
      renderDividers={false}
      renderNoResults={false}
      replaceAllInputOnSelect={false}
      requiredCharacters={1}
      value=""
    />
    <div>
      <br />
    </div>
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <button
      className="btn btn-link"
      onClick={[Function]}
      type="button"
    >
      <FormattedMessage
        defaultMessage="Cancel"
        id="add_user_to_channel_modal.cancel"
        values={Object {}}
      />
    </button>
    <button
      className="btn btn-primary"
      disabled={true}
      onClick={[Function]}
      type="button"
    >
      <FormattedMessage
        defaultMessage="Add"
        id="add_user_to_channel_modal.add"
        values={Object {}}
      />
    </button>
  </ModalFooter>
</Modal>
`;

exports[`components/AddUserToChannelModal should match snapshot when saving 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogClassName="modal--overflow"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onExited={[MockFunction]}
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      <FormattedMessage
        defaultMessage="Add {name} to a channel"
        id="add_user_to_channel_modal.title"
        values={
          Object {
            "name": "@undefined",
          }
        }
      />
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
  >
    <div
      className="modal__hint"
    >
      <FormattedMessage
        defaultMessage="Type to find a channel. Use ↑↓ to browse, ↵ to select, ESC to dismiss."
        id="add_user_to_channel_modal.help"
        values={Object {}}
      />
    </div>
    <SuggestionBox
      className="form-control focused"
      completeOnTab={false}
      containerClass=""
      delayInputUpdate={true}
      isRHS={false}
      listComponent={[Function]}
      listStyle="bottom"
      maxLength="64"
      onChange={[Function]}
      onItemSelected={[Function]}
      openOnFocus={false}
      openWhenEmpty={true}
      providers={
        Array [
          SearchChannelWithPermissionsProvider {
            "appDispatch": [Function],
            "disableDispatches": false,
            "dispatch": [Function],
            "getState": [Function],
            "latestComplete": true,
            "latestPrefix": "",
            "requestStarted": false,
          },
        ]
      }
      renderDividers={false}
      renderNoResults={false}
      replaceAllInputOnSelect={false}
      requiredCharacters={1}
      value=""
    />
    <div>
      <br />
    </div>
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <button
      className="btn btn-link"
      onClick={[Function]}
      type="button"
    >
      <FormattedMessage
        defaultMessage="Cancel"
        id="add_user_to_channel_modal.cancel"
        values={Object {}}
      />
    </button>
    <button
      className="btn btn-primary"
      disabled={true}
      onClick={[Function]}
      type="button"
    >
      <FormattedMessage
        defaultMessage="Add"
        id="add_user_to_channel_modal.add"
        values={Object {}}
      />
    </button>
  </ModalFooter>
</Modal>
`;
